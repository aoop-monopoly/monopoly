class Player {
  int position;
  int money;
  int railroad;
}

abstract class Property {
    Player owner;
    int houses;
    int hotel;
    int mortgage;
    int mortgaged;
    int monopoly;

    public int getRent(Property _property) {
      return _property.rent();
    }

    public int getPosition () {
      return position();
    }

    protected abstract int rent();
    protected abstract int position();
    protected abstract void buy(Player _buyer);
    protected abstract void trade(Player _buyer, Player _seller);
    protected abstract void mortgage();
    protected abstract void unMortgage();
    protected abstract void buildHouse(int _amount);
    protected abstract void buildHotel();
    protected abstract void sellHouse(int _amount);
    protected abstract void sellHotel();
}

class Mediterranean extends Property {
  int price = 60;
  int position = 1;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 2;

    if (hotel == 1) {
      rent = 250;
    }
    else if (houses == 1) {
      rent = 10;
    }
    else if (houses == 2) {
      rent = 30;
    }
    else if (houses == 3) {
      rent = 90;
    }
    else if (houses == 4) {
      rent = 160;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 50;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 50;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 50;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 250;
  }
}

class Baltic extends Property {
  int price = 60;
  int position = 3;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 4;

    if (hotel == 1) {
      rent = 450;
    }
    else if (houses == 1) {
      rent = 20;
    }
    else if (houses == 2) {
      rent = 60;
    }
    else if (houses == 3) {
      rent = 180;
    }
    else if (houses == 4) {
      rent = 320;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 50;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 50;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 50;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 250;
  }
}

class Oriental extends Property {
  int price = 100;
  int position = 6;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 6;

    if (hotel == 1) {
      rent = 550;
    }
    else if (houses == 1) {
      rent = 30;
    }
    else if (houses == 2) {
      rent = 90;
    }
    else if (houses == 3) {
      rent = 270;
    }
    else if (houses == 4) {
      rent = 400;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 50;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 50;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 50;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 250;
  }
}

class Vermont extends Property {
  int price = 100;
  int position = 8;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 6;

    if (hotel == 1) {
      rent = 550;
    }
    else if (houses == 1) {
      rent = 30;
    }
    else if (houses == 2) {
      rent = 90;
    }
    else if (houses == 3) {
      rent = 270;
    }
    else if (houses == 4) {
      rent = 400;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 50;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 50;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 50;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 250;
  }
}

class Connecticut extends Property {
  int price = 120;
  int position = 9;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 8;

    if (hotel == 1) {
      rent = 600;
    }
    else if (houses == 1) {
      rent = 40;
    }
    else if (houses == 2) {
      rent = 100;
    }
    else if (houses == 3) {
      rent = 300;
    }
    else if (houses == 4) {
      rent = 450;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 50;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 50;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 50;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 250;
  }
}

class StCharles extends Property {
  int price = 140;
  int position = 11;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 10;

    if (hotel == 1) {
      rent = 750;
    }
    else if (houses == 1) {
      rent = 50;
    }
    else if (houses == 2) {
      rent = 150;
    }
    else if (houses == 3) {
      rent = 450;
    }
    else if (houses == 4) {
      rent = 625;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 100;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 100;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 100;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 500;
  }
}

class States extends Property {
  int price = 140;
  int position = 13;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 10;

    if (hotel == 1) {
      rent = 750;
    }
    else if (houses == 1) {
      rent = 50;
    }
    else if (houses == 2) {
      rent = 150;
    }
    else if (houses == 3) {
      rent = 450;
    }
    else if (houses == 4) {
      rent = 625;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 100;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 100;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 100;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 500;
  }
}

class Virginia extends Property {
  int price = 160;
  int position = 14;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 12;

    if (hotel == 1) {
      rent = 900;
    }
    else if (houses == 1) {
      rent = 60;
    }
    else if (houses == 2) {
      rent = 180;
    }
    else if (houses == 3) {
      rent = 500;
    }
    else if (houses == 4) {
      rent = 700;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 100;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 100;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 100;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 500;
  }
}

class StJames extends Property {
  int price = 180;
  int position = 16;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 14;

    if (hotel == 1) {
      rent = 950;
    }
    else if (houses == 1) {
      rent = 70;
    }
    else if (houses == 2) {
      rent = 200;
    }
    else if (houses == 3) {
      rent = 550;
    }
    else if (houses == 4) {
      rent = 750
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 100;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 100;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 100;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 500;
  }
}

class Tennessee extends Property {
  int price = 180;
  int position = 18;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 14;

    if (hotel == 1) {
      rent = 950;
    }
    else if (houses == 1) {
      rent = 70;
    }
    else if (houses == 2) {
      rent = 200;
    }
    else if (houses == 3) {
      rent = 550;
    }
    else if (houses == 4) {
      rent = 750;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 100;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 100;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 100;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 500;
  }
}

class NewYork extends Property {
  int price = 200;
  int position = 19;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 16;

    if (hotel == 1) {
      rent = 1000;
    }
    else if (houses == 1) {
      rent = 80;
    }
    else if (houses == 2) {
      rent = 220;
    }
    else if (houses == 3) {
      rent = 600;
    }
    else if (houses == 4) {
      rent = 800;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 100;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 100;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 100;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 500;
  }
}

class Kentucky extends Property {
  int price = 220;
  int position = 21;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 18;

    if (hotel == 1) {
      rent = 1050;
    }
    else if (houses == 1) {
      rent = 90;
    }
    else if (houses == 2) {
      rent = 250;
    }
    else if (houses == 3) {
      rent = 700;
    }
    else if (houses == 4) {
      rent = 875;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 150;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 150;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 150;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 750;
  }
}

class Indiana extends Property {
  int price = 220;
  int position = 23;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 18;

    if (hotel == 1) {
      rent = 1050;
    }
    else if (houses == 1) {
      rent = 90;
    }
    else if (houses == 2) {
      rent = 250;
    }
    else if (houses == 3) {
      rent = 700;
    }
    else if (houses == 4) {
      rent = 875;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 150;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 150;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 150;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 750;
  }
}

class Illinois extends Property {
  int price = 240;
  int position = 24;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 20;

    if (hotel == 1) {
      rent = 1100;
    }
    else if (houses == 1) {
      rent = 100;
    }
    else if (houses == 2) {
      rent = 300;
    }
    else if (houses == 3) {
      rent = 750;
    }
    else if (houses == 4) {
      rent = 925;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 150;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 150;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 150;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 750;
  }
}

class Atlantic extends Property {
  int price = 260;
  int position = 26;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 22;

    if (hotel == 1) {
      rent = 1150;
    }
    else if (houses == 1) {
      rent = 110;
    }
    else if (houses == 2) {
      rent = 330;
    }
    else if (houses == 3) {
      rent = 800;
    }
    else if (houses == 4) {
      rent = 975;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 150;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 150;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 150;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 750;
  }
}

class Ventnor extends Property {
  int price = 260;
  int position = 27;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 22;

    if (hotel == 1) {
      rent = 1150;
    }
    else if (houses == 1) {
      rent = 110;
    }
    else if (houses == 2) {
      rent = 330;
    }
    else if (houses == 3) {
      rent = 800;
    }
    else if (houses == 4) {
      rent = 975;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 150;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 150;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 150;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 750;
  }
}

class Marvin extends Property {
  int price = 280;
  int position = 29;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 24;

    if (hotel == 1) {
      rent = 1200;
    }
    else if (houses == 1) {
      rent = 120;
    }
    else if (houses == 2) {
      rent = 360;
    }
    else if (houses == 3) {
      rent = 850;
    }
    else if (houses == 4) {
      rent = 1025;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 150;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 150;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 150;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 750;
  }
}

class Pacific extends Property {
  int price = 300;
  int position = 31;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 26;

    if (hotel == 1) {
      rent = 1275;
    }
    else if (houses == 1) {
      rent = 130;
    }
    else if (houses == 2) {
      rent = 390;
    }
    else if (houses == 3) {
      rent = 900;
    }
    else if (houses == 4) {
      rent = 1100;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 200;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 200;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 200;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 1000;
  }
}

class NorthCarolina extends Property {
  int price = 300;
  int position = 32;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 26;

    if (hotel == 1) {
      rent = 1275;
    }
    else if (houses == 1) {
      rent = 130;
    }
    else if (houses == 2) {
      rent = 390;
    }
    else if (houses == 3) {
      rent = 900;
    }
    else if (houses == 4) {
      rent = 1100;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 200;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 200;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 200;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 1000;
  }
}

class Pennsylvania extends Property {
  int price = 320;
  int position = 34;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 28;

    if (hotel == 1) {
      rent = 1400;
    }
    else if (houses == 1) {
      rent = 150;
    }
    else if (houses == 2) {
      rent = 450;
    }
    else if (houses == 3) {
      rent = 1000;
    }
    else if (houses == 4) {
      rent = 1200;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 200;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 200;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 200;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 1000;
  }
}

class ParkPlace extends Property {
  int price = 350;
  int position = 37;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 35;

    if (hotel == 1) {
      rent = 1500;
    }
    else if (houses == 1) {
      rent = 175;
    }
    else if (houses == 2) {
      rent = 500;
    }
    else if (houses == 3) {
      rent = 1100;
    }
    else if (houses == 4) {
      rent = 1300;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 200;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 200;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 200;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 1000;
  }
}

class Pacific extends Property {
  int price = 400;
  int position = 39;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 50;

    if (hotel == 1) {
      rent = 2000;
    }
    else if (houses == 1) {
      rent = 200;
    }
    else if (houses == 2) {
      rent = 600;
    }
    else if (houses == 3) {
      rent = 1400;
    }
    else if (houses == 4) {
      rent = 1700;
    }
    else if (monopoly == 1) {
      rent *= 2;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }

  @Override
  protected void buildHouse(int _amount) {
    if(!mortgaged) {
      houses += _amount;
      owner.money -= _amount * 200;
    }
  }

  @Override
  protected void buildHotel() {
    if(!mortgaged) {
      hotel = 1;
      owner.money -= (5 - houses) * 200;
    }
  }

  @Override
  protected void sellHouse(int _amount) {
    houses -= _amount;
    owner.money -= _amount * 200;
  }

  @Override
  protected void sellHotel() {
    hotel = 0;
    owner.money += 1000;
  }
}

class Reading extends Property {
  int price = 200;
  int position = 5;

  @Override
  protected int rent() {

    if (mortgaged) {
      return 0;
    }

    int rent = 25;

    if (owner.railroad == 1) {
      rent = 25;
    }
    else if (owner.railroad == 1) {
      rent = 50;
    }
    else if (owner.railroad == 2) {
      rent = 100;
    }
    else if (owner.railroad == 3) {
      rent = 200;
    }

    return rent;
  }
  
  @Override
  protected int position() {
    return position;
  }

  @Override
  protected void buy(Player _buyer) {
    owner = _buyer;
    _buyer.money -= price;
    _buyer.railroad++;
  }

  @Override
  protected void trade(Player _buyer, Player _seller) {
    owner = _seller;
    _buyer.money -= price;
    _seller.money += price;
    _buyer.railroad++;
    _seller.railroad--;
  }

  @Override
  protected void mortgage() {
    mortgaged = 1;
    owner.money += price/2;
  }

  @Override
  protected void unMortgage() {
    mortgaged = 0;
    owner.money -= price/2;
  }
}

class IncomeTax extends Property {
  int position = 4;

  @Override
  protected int rent(Player _visitor) {

    if (tenPercent) {
      rent = _visitor.money/10;
    }
    else {
      rent = 200;
    }

    return rent;
  }

  @Override
  protected int position() {
    return position;
  }
}

class LuxuryTax extends Property {
  int position = 38;

  @Override
  protected int rent(Player _visitor) {

      rent = 200;

    return rent;
  }

  @Override
  protected int position() {
    return position;
  }
}

